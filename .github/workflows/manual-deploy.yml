name: Deploy to EC2

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
        type: choice
        options:
          - main
          - old-version
          - staging
          - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build --no-cache -t zz212224236/snapgoated-services:${{ github.event.inputs.branch }}-${{ github.sha }} .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push zz212224236/snapgoated-services:${{ github.event.inputs.branch }}-${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt-get update -y
            sudo apt-get install -y docker.io

            echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            CONTAINER_ID=$(sudo docker ps -aq --filter name=snapgoated-services)
            if [[ -n "$CONTAINER_ID" ]]; then
              echo "Stopping container: $CONTAINER_ID"
              sudo docker stop "$CONTAINER_ID"
              echo "Removing container: $CONTAINER_ID"
              sudo docker rm "$CONTAINER_ID"
            fi

            IMAGE_ID=$(sudo docker images -aq z