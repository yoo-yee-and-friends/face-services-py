name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build --no-cache -t zz212224236/snapgoated-services:${{ github.sha }} .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push zz212224236/snapgoated-services:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.9
        with:
            host: ${{ secrets.EC2_HOST }}
            username: ubuntu
            key: ${{ secrets.EC2_SSH_KEY }}
            script: |
              # Update EC2 and install Docker (if not already installed)
              sudo apt-get update -y
              sudo apt-get install -y docker.io

              # Docker login
              echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

              # Stop the running container (if any) - improved handling
              CONTAINER_ID=$(sudo docker ps -aq --filter name=snapgoated-services)
              if [[ -n "$CONTAINER_ID" ]]; then
                echo "Stopping container: $CONTAINER_ID"
                sudo docker stop "$CONTAINER_ID"
                echo "Removing container: $CONTAINER_ID"
                sudo docker rm "$CONTAINER_ID"
              fi

              # Remove old images (optional, but good practice) - improved handling
              IMAGE_ID=$(sudo docker images -aq zz212224236/snapgoated-services)
              if [[ -n "$IMAGE_ID" ]]; then
                echo "Removing image: $IMAGE_ID"
                sudo docker rmi "$IMAGE_ID"
              fi

              # Pull the latest Docker image
              sudo docker pull zz212224236/snapgoated-services:${{ github.sha }}

              # Run the new Docker container - using a more robust approach
              sudo docker run -d --name snapgoated-services \
                --restart unless-stopped \
                -p 8000:8000 \
                --memory="16g" \
                --memory-swap="18g" \
                -e WEB_CONCURRENCY="4" \
                -e GUNICORN_MAX_WORKERS="8" \
                -e GUNICORN_MIN_WORKERS="2" \
                -e GUNICORN_WORKER_CONNECTIONS="1000" \
                -e AUTOSCALE_CHECK_INTERVAL="60" \
                -e CPU_THRESHOLD_DOWN="30" \
                -e CPU_THRESHOLD_UP="70" \
                -e MEMORY_THRESHOLD="80" \
                -e MAX_REQUESTS="2000" \
                -e MAX_REQUESTS_JITTER="100" \
                -e GRACEFUL_TIMEOUT="180" \
                zz212224236/snapgoated-services:${{ github.sha }}

              # Verify that the container is running
              sudo docker ps -a
              
      - name: Notify Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_COMMIT: ${{ github.event.head_commit.message }}
          GITHUB_REPO: ${{ github.repository }}
          GITHUB_RUN_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        run: |
          GITHUB_SUCCESS="true"
          
          PAYLOAD=$(echo -e "ðŸš€ **Deployment Status: Compleated**\n  **Repository:** $GITHUB_REPO\n  **By:** $GITHUB_ACTOR\n  **Commit:** $GITHUB_COMMIT\n  **[View Action]($GITHUB_RUN_URL)**" | jq -R --slurp '{content: .}')
          
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "$PAYLOAD" \
               $DISCORD_WEBHOOK
