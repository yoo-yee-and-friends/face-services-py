name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build --no-cache -t zz212224236/snapgoated-services:${{ github.sha }} .

    - name: Push Docker Image to Docker Hub
      run: |
        docker push zz212224236/snapgoated-services:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v0.1.9
      with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Docker Compose V1 directly
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            
            # Verify Docker Compose installation
            docker-compose --version
            
            # Create docker-compose.yml file
            cat > docker-compose.yml << 'EOL'
            version: '3.8'
            services:
              web:
                image: zz212224236/snapgoated-services:${{ github.sha }}
                ports:
                  - "8000:8000"
                environment:
                  - CELERY_BROKER_URL=redis://redis:6379/0
                  - CELERY_RESULT_BACKEND=redis://redis:6379/0
                  - OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
                  - WEB_CONCURRENCY=1
                  - GUNICORN_MAX_WORKERS=2
                  - GUNICORN_MIN_WORKERS=1
                  - MAX_WORKER_MEMORY_MB=4096
                depends_on:
                  - redis
                restart: unless-stopped
                deploy:
                  resources:
                    limits:
                      memory: 8G
              worker:
                image: zz212224236/snapgoated-services:${{ github.sha }}
                command: celery -A app.core.celery_app worker --loglevel=info --concurrency=2 --max-memory-per-child=4000000
                environment:
                  - CELERY_BROKER_URL=redis://redis:6379/0
                  - CELERY_RESULT_BACKEND=redis://redis:6379/0
                depends_on:
                  - redis
                  - web
                restart: unless-stopped
                deploy:
                  resources:
                    limits:
                      memory: 6G
              beat:
                image: zz212224236/snapgoated-services:${{ github.sha }}
                command: celery -A app.core.celery_app beat --loglevel=info
                environment:
                  - CELERY_BROKER_URL=redis://redis:6379/0
                  - CELERY_RESULT_BACKEND=redis://redis:6379/0
                depends_on:
                  - redis
                  - web
                restart: unless-stopped
              flower:
                image: zz212224236/snapgoated-services:${{ github.sha }}
                command: celery -A app.core.celery_app flower --port=5555
                ports:
                  - "5555:5555"
                environment:
                  - CELERY_BROKER_URL=redis://redis:6379/0
                  - CELERY_RESULT_BACKEND=redis://redis:6379/0
                depends_on:
                  - redis
                  - web
                  - worker
                restart: unless-stopped
              redis:
                image: redis:6-alpine
                volumes:
                  - redis-data:/data
                restart: unless-stopped
            volumes:
              redis-data:
            EOL

            # Login to Docker Hub - verify these secrets are correctly configured in GitHub
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            
            # Use docker-compose V1 commands
            docker-compose down
            docker-compose up -d
            
            docker-compose ps

    - name: Notify Discord
      env:
        DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        GITHUB_ACTOR: ${{ github.actor }}
        GITHUB_COMMIT: ${{ github.event.head_commit.message }}
        GITHUB_REPO: ${{ github.repository }}
        GITHUB_RUN_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      run: |
        GITHUB_SUCCESS="true"

        PAYLOAD=$(echo -e "ðŸš€ **Deployment Status: Completed**\n  **Repository:** $GITHUB_REPO\n  **By:** $GITHUB_ACTOR\n  **Commit:** $GITHUB_COMMIT\n  **[View Action]($GITHUB_RUN_URL)**" | jq -Rs .)

        curl -H "Content-Type: application/json" \
             -X POST \
             -d "$PAYLOAD" \
             $DISCORD_WEBHOOK